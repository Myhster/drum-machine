{"version":3,"sources":["butArray.js","App.js","reportWebVitals.js","index.js"],"names":["butArr","name","id","src","App","useState","textOut","setTextOut","drumButtons","map","item","index","audio","React","createRef","document","addEventListener","e","key","toLocaleUpperCase","getElementById","play","Object","values","className","onClick","current","ref","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iMAyDeA,G,MAzDA,CACb,CACEC,KAAM,IAENC,GAAI,QACJC,IAAK,4FAEP,CACEF,KAAM,IAENC,GAAI,OACJC,IAAK,4DAEP,CACEF,KAAM,IAENC,GAAI,OACJC,IAAK,4DAEP,CACEF,KAAM,IAENC,GAAI,OACJC,IAAK,4DAEP,CACEF,KAAM,IAENC,GAAI,SACJC,IAAK,0DAEP,CACEF,KAAM,IAENC,GAAI,MACJC,IAAK,8DAEP,CACEF,KAAM,IAENC,GAAI,QACJC,IAAK,0DAEP,CACEF,KAAM,IAENC,GAAI,UACJC,IAAK,2DAEP,CACEF,KAAM,IAENC,GAAI,UACJC,IAAK,6D,OCWMC,MA5Df,WACE,MAA8BC,mBAAS,QAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAcR,EAAOS,KAAI,SAACC,EAAMC,GACpC,IAAIC,EAAQC,IAAMC,YAclB,OATAC,SAASC,iBAAiB,WAAW,SAACC,GACpC,IAAMf,EAAKe,EAAEC,IAAIC,oBACXP,EAAQG,SAASK,eAAelB,GAClCU,IACFA,EAAMS,OACNd,EAAWe,OAAOC,OAAOX,GAAO,GAArB,SAKb,sBACEY,UAAU,WAEVtB,GAAIQ,EAAKR,GACTuB,QAAS,WACPlB,EAAWG,EAAKR,IAlBpBU,EAAMc,QAAQL,QAad,UASGX,EAAKT,KACN,uBACE0B,IAAKf,EACLY,UAAU,OACVtB,GAAIQ,EAAKT,KACTE,IAAKO,EAAKP,IACVyB,IAAKlB,EAAKR,OAbPS,MAmBX,OACE,qBAAKa,UAAU,MAAf,SACE,sBAAKtB,GAAG,eAAR,UACE,oBAAIsB,UAAU,cAAd,0BACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACGhB,EACD,sBAAKN,GAAG,UAAR,UACE,wCACA,4BAAII,oBC1CLuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASK,eAAe,SAM1BS,K","file":"static/js/main.230588db.chunk.js","sourcesContent":["const butArr = [\r\n  {\r\n    name: 'Q',\r\n\r\n    id: 'snare',\r\n    src: 'https://soundcamp.org/sounds/381/snare/A/subtle-reverb-snare-drum-sound-a-key-01-Kb6.mp3',\r\n  },\r\n  {\r\n    name: 'W',\r\n\r\n    id: 'honk',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n  },\r\n  {\r\n    name: 'E',\r\n\r\n    id: 'step',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n  },\r\n  {\r\n    name: 'A',\r\n\r\n    id: 'clap',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n  },\r\n  {\r\n    name: 'S',\r\n\r\n    id: 'hi-hat',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n  },\r\n  {\r\n    name: 'D',\r\n\r\n    id: 'tip',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n  },\r\n  {\r\n    name: 'Z',\r\n\r\n    id: 'tipsy',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n  },\r\n  {\r\n    name: 'X',\r\n\r\n    id: 'D-chord',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n  },\r\n  {\r\n    name: 'C',\r\n\r\n    id: 'F-chord',\r\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n  },\r\n];\r\n\r\nexport default butArr;\r\n","import './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport butArr from './butArray.js';\n\nfunction App() {\n  const [textOut, setTextOut] = useState('love');\n\n  const drumButtons = butArr.map((item, index) => {\n    let audio = React.createRef();\n    const playSound = () => {\n      audio.current.play();\n    };\n\n    document.addEventListener('keydown', (e) => {\n      const id = e.key.toLocaleUpperCase();\n      const audio = document.getElementById(id);\n      if (audio) {\n        audio.play();\n        setTextOut(Object.values(audio)[1]['alt']);\n      }\n    });\n\n    return (\n      <div\n        className='drum-pad'\n        key={index}\n        id={item.id}\n        onClick={() => {\n          setTextOut(item.id);\n          playSound();\n        }}\n      >\n        {item.name}\n        <audio\n          ref={audio}\n          className='clip'\n          id={item.name}\n          src={item.src}\n          alt={item.id}\n        ></audio>\n      </div>\n    );\n  });\n\n  return (\n    <div className='App'>\n      <div id='drum-machine'>\n        <h2 className='text-center'>Drum Machine</h2>\n        <div className='container'>\n          <div className='new-row'>\n            <div className='new-row'>\n              {drumButtons}\n              <div id='display'>\n                <h4>output</h4>\n                <p>{textOut}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}